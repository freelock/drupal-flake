#!/usr/bin/env bash

# phpunit-setup - Create phpunit.xml configuration for Drupal testing

set -euo pipefail

PROJECT_ROOT="$PWD"
DOCROOT="${DOCROOT:-web}"
PROJECT_NAME="${PROJECT_NAME:-drupal-demo}"
DOMAIN="${DOMAIN:-$PROJECT_NAME.ddev.site}"
PORT="${PORT:-8088}"
DB_SOCKET="${DB_SOCKET:-$PWD/data/$PROJECT_NAME-db/mysql.sock}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

# Check if we're in a Drupal project
if [[ ! -f "$PROJECT_ROOT/$DOCROOT/index.php" ]]; then
    print_error "This doesn't appear to be a Drupal project. Expected to find $DOCROOT/index.php"
    exit 1
fi

# Check if Drupal core exists
if [[ ! -d "$PROJECT_ROOT/$DOCROOT/core" ]]; then
    print_error "Drupal core not found at $PROJECT_ROOT/$DOCROOT/core"
    exit 1
fi

print_info "Setting up PHPUnit configuration for Drupal testing..."
print_info "Using environment:"
print_info "  • Base URL: http://$DOMAIN:$PORT"
print_info "  • Database: mysql://drupal@localhost/drupal?unix_socket=$DB_SOCKET"
print_info "  • Project: $PROJECT_NAME"

# Create phpunit.xml
cat > "$PROJECT_ROOT/phpunit.xml" << EOF
<?xml version="1.0" encoding="UTF-8"?>

<!-- PHPUnit configuration file for Drupal development -->
<!-- Generated by drupal-flake phpunit-setup -->

<phpunit bootstrap="$DOCROOT/core/tests/bootstrap.php"
         colors="true"
         beStrictAboutTestsThatDoNotTestAnything="true"
         beStrictAboutOutputDuringTests="true"
         beStrictAboutChangesToGlobalState="true"
         printerClass="\Drupal\Tests\Listeners\HtmlOutputPrinter">
  
  <php>
    <!-- Set error reporting to E_ALL. -->
    <ini name="error_reporting" value="32767"/>
    
    <!-- Do not limit the amount of memory tests take to run. -->
    <ini name="memory_limit" value="-1"/>
    
    <!-- Drupal test environment configuration -->
    <env name="SIMPLETEST_BASE_URL" value="http://$DOMAIN:$PORT"/>
    <env name="SIMPLETEST_DB" value="mysql://drupal@localhost/drupal?unix_socket=$DB_SOCKET"/>
    
    <!-- Symfony deprecation testing -->
    <env name="SYMFONY_DEPRECATIONS_HELPER" value="999999"/>
    
    <!-- Directory for artifacts generated during tests -->
    <env name="SIMPLETEST_ARTIFACTS" value="$PROJECT_ROOT/data/test-artifacts"/>
    
    <!-- Browser test output directory -->
    <env name="BROWSERTEST_OUTPUT_DIRECTORY" value="$PROJECT_ROOT/$DOCROOT/sites/simpletest/browser_output"/>
    <env name="BROWSERTEST_OUTPUT_VERBOSE" value="true"/>
    
    <!-- Browser test configuration -->
    <!-- Uncomment and adjust these for browser testing with Selenium: -->
    <!-- <env name="MINK_DRIVER_ARGS" value='["http://localhost:4444/wd/hub", {"browserName":"chrome","chromeOptions":{"args":["&#45;&#45;disable-gpu","&#45;&#45;headless"]}}]'/> -->
    <!-- <env name="MINK_DRIVER_ARGS_WEBDRIVER" value='["chrome", {"chromeOptions": {"w3c": false}}, "http://localhost:4444/wd/hub"]' /> -->
  </php>
  
  <testsuites>
    <testsuite name="unit">
      <directory>./tests/Unit</directory>
    </testsuite>
    <testsuite name="kernel">
      <directory>./tests/Kernel</directory>
    </testsuite>
    <testsuite name="functional">
      <directory>./tests/Functional</directory>
    </testsuite>
    <testsuite name="functional-javascript">
      <directory>./tests/FunctionalJavascript</directory>
    </testsuite>
  </testsuites>
  
  <!-- Filter for coverage reports. -->
  <filter>
    <whitelist>
      <directory>./</directory>
      <exclude>
        <directory>$DOCROOT/core</directory>
        <directory>$DOCROOT/modules/contrib</directory>
        <directory>vendor</directory>
        <directory>tests</directory>
        <directory>data</directory>
      </exclude>
    </whitelist>
  </filter>
  
  <listeners>
    <listener class="\Drupal\Tests\Listeners\DrupalListener">
    </listener>
  </listeners>
  
</phpunit>
EOF

# Create tests directory structure if it doesn't exist
for test_type in Unit Kernel Functional FunctionalJavascript; do
    if [[ ! -d "$PROJECT_ROOT/tests/$test_type" ]]; then
        mkdir -p "$PROJECT_ROOT/tests/$test_type"
        print_info "Created directory: tests/$test_type"
    fi
done

# Create test artifacts directory
mkdir -p "$PROJECT_ROOT/data/test-artifacts"

# Create Drupal browser test directories (required for functional tests)
print_info "Setting up browser test directories..."
mkdir -p "$PROJECT_ROOT/$DOCROOT/sites/simpletest/browser_output"
chmod -R 777 "$PROJECT_ROOT/$DOCROOT/sites/simpletest"
print_info "Created: $DOCROOT/sites/simpletest/browser_output"

# Create a sample test file if none exists
if [[ ! -f "$PROJECT_ROOT/tests/Unit/ExampleTest.php" ]]; then
    cat > "$PROJECT_ROOT/tests/Unit/ExampleTest.php" << 'EOF'
<?php

namespace Drupal\Tests\Unit;

use PHPUnit\Framework\TestCase;

/**
 * Example unit test.
 *
 * This is a basic example of a unit test. Remove this file and create
 * your own tests in the appropriate directories.
 *
 * @group example
 */
class ExampleTest extends TestCase {

  /**
   * Tests that the test environment is working.
   */
  public function testExample() {
    $this->assertEquals(2, 1 + 1);
  }

}
EOF
    print_info "Created example unit test: tests/Unit/ExampleTest.php"
fi

print_success "PHPUnit configuration created successfully!"
print_info ""
print_info "Configuration details:"
print_info "  • Base URL: http://$DOMAIN:$PORT"
print_info "  • Database: mysql://drupal@localhost/drupal?unix_socket=$DB_SOCKET"
print_info "  • Test directories: Unit, Kernel, Functional, FunctionalJavascript"
print_info "  • Artifacts directory: data/test-artifacts"
print_info ""
print_info "Next steps:"
print_info "  • Run tests with: phpunit"
print_info "  • Test specific modules with: phpunit-module <module-name>"
print_info "  • For browser tests, set up Selenium/Chrome driver if needed"