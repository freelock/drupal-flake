#!/usr/bin/env bash

# Exit on error
set -e

# Use params or env vars, fallback to defaults
PROJECT_NAME=${1:-${PROJECT_NAME:-$(basename $(pwd))}}
DOCROOT=${2:-${DOCROOT:-"web"}}
DB_SOCKET=${3:-${DB_SOCKET:-"${PWD}/data/${PROJECT_NAME}-db/mysql.sock"}}
SITE_PATH="${DOCROOT%/}${DOCROOT:+/}sites/default"
SETTINGS_FILE="${SITE_PATH}/settings.php"
NIX_SETTINGS_FILE="${SITE_PATH}/settings.nix.php"

# Validate settings.php exists
if [ ! -f "$SETTINGS_FILE" ]; then
    echo "Error: ${SETTINGS_FILE} does not exist. Is the docroot correct? (${DOCROOT}) If not, set in .env or pass as second argument."
    exit 1
fi

# Create settings.nix.php
cat > "${NIX_SETTINGS_FILE}" << EOL
<?php
\$databases['default']['default'] = [
  'database' => 'drupal',
  'username' => "drupal",
  'password' => "",
  'host' => 'localhost',
  'unix_socket' => "${PWD}/${DB_SOCKET}",
  'driver' => 'mysql',
  'prefix' => "",
];

\$settings['hash_salt'] = 'development-only-hash';
\$settings['container_yamls'][] = DRUPAL_ROOT . '/sites/development.services.yml';
\$settings['cache']['bins']['render'] = 'cache.backend.null';
\$settings['cache']['bins']['dynamic_page_cache'] = 'cache.backend.null';
\$settings['cache']['bins']['page'] = 'cache.backend.null';
\$config['system.performance']['css']['preprocess'] = FALSE;
\$config['system.performance']['js']['preprocess'] = FALSE;
EOL

# Create files if not present
mkdir -p ${SITE_PATH}/files

# Define the NIX SETTINGS block content
NIX_BLOCK=$(cat <<EOF
# BEGIN NIX SETTINGS
if (file_exists(\$app_root . "/" . \$site_path . "/settings.nix.php") &&
  file_exists("${PWD}/${DB_SOCKET}") &&
  filetype("${PWD}/${DB_SOCKET}") === "socket") {
  include \$app_root . "/" . \$site_path . "/settings.nix.php";
}
# END NIX SETTINGS
EOF
)

# Check if the NIX SETTINGS block exists
if grep -q "# BEGIN NIX SETTINGS" "$SETTINGS_FILE" && grep -q "# END NIX SETTINGS" "$SETTINGS_FILE"; then
  # Block exists, replace content between comments
  TMP_FILE=$(mktemp)
  # Process the file line by line
  awk '
    /# BEGIN NIX SETTINGS/ {
      print;
      print_block = 1;
      next;
    }
    /# END NIX SETTINGS/ {
      print_block = 0;
      in_block = 0;
      print;
      next;
    }
    print_block {
      # Skip lines between BEGIN and END markers
      in_block = 1;
      next;
    }
    {
      # Print all other lines
      print;
    }
  ' "$SETTINGS_FILE" > "$TMP_FILE"
  # Insert new block content after BEGIN marker
  sed -i "/# BEGIN NIX SETTINGS/a\
if (file_exists(\$app_root . '/' . \$site_path . '/settings.nix.php') \&\&\
  file_exists('${PWD}/${DB_SOCKET}') \&\&\
  filetype('${PWD}/${DB_SOCKET}') === 'socket') {\
  include \$app_root . '/' . \$site_path . '/settings.nix.php';\
}" "$TMP_FILE"

 # Replace original file
  mv "$TMP_FILE" "$SETTINGS_FILE"
  echo "NIX SETTINGS block updated in $SETTINGS_FILE"
else
  # Block doesn't exist, add it to the end of the file
  echo -e "\n$NIX_BLOCK" >> "$SETTINGS_FILE"
  echo "NIX SETTINGS block added to $SETTINGS_FILE"
fi

